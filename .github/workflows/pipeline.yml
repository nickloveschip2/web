name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build.outcome }}  # Capture the build status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build project
        id: build
        run: npm run build

  test:
    name: Test Stage
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.test.outcome }}  # Capture the test status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Run tests
        id: test
        run: npm test

  deploy:
    name: Deploy Stage
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}  # Ensure deployment happens only on push events
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy application
        run: echo "Deploying application..."
        # Add your deployment commands here

  # Job to ensure order without `needs` (requires additional conditions)
  ensure_order:
    name: Ensure Order
    runs-on: ubuntu-latest
    steps:
      - name: Wait for build and test
        run: |
          echo "Waiting for build and test jobs to complete..."
          # Check build and test statuses (could use an external service or custom scripts)
